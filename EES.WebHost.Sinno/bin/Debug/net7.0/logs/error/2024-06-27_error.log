{
  "time": "2024-06-27 16:44:11.830",
  "message": 日志入库发生异常! log:{"userId":0,"platform":"","requestType":"get","apiRoute":"//api/system/gettime","requestUrl":"http://localhost:5000//api/system/gettime","requestHeader":"{\"accept\":[\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\"],\"connection\":[\"keep-alive\"],\"host\":[\"localhost:5000\"],\"user-Agent\":[\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36\"],\"accept-Encoding\":[\"gzip, deflate, br, zstd\"],\"accept-Language\":[\"zh-CN,zh;q=0.9\"],\"upgrade-Insecure-Requests\":[\"1\"],\"sec-ch-ua\":[\"\\\"Not/A)Brand\\\";v=\\\"8\\\", \\\"Chromium\\\";v=\\\"126\\\", \\\"Google Chrome\\\";v=\\\"126\\\"\"],\"sec-ch-ua-mobile\":[\"?0\"],\"sec-ch-ua-platform\":[\"\\\"Windows\\\"\"],\"sec-Fetch-Site\":[\"none\"],\"sec-Fetch-Mode\":[\"navigate\"],\"sec-Fetch-User\":[\"?1\"],\"sec-Fetch-Dest\":[\"document\"]}","requestQuery":"","requestBody":"","traceId":"0HN4MGJTSJOAT:00000001","requestTime":"2024-06-27 16:44:10","response":"","timeConsumption":649,"id":0,"createTime":"2024-06-27 16:44:11"} ,
  "exception": System.ArgumentException: Keyword not supported: 'port'.
   at Microsoft.Data.Common.DbConnectionOptions.ParseInternal(Dictionary`2 parsetable, String connectionString, Boolean buildChain, Dictionary`2 synonyms, Boolean firstKey)
   at Microsoft.Data.Common.DbConnectionOptions..ctor(String connectionString, Dictionary`2 synonyms)
   at Microsoft.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   at Microsoft.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   at Microsoft.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   at Microsoft.Data.SqlClient.SqlConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at EES.Infrastructure.Service.LogHandlerService.WriteLogAsync(LogEntityBase logEntity, CancellationToken cancellationToken) in E:\Sinno\Projects\InnerProject\SinnoDemo\EES.Infrastructure\Service\LogHandlerService.cs:line 105,
  "stacktrace": ExecutionContext.RunInternal => <<StartAsync>b__0>d.MoveNext => LogHandlerService.WriteLogAsync
}
{
  "time": "2024-06-27 16:44:29.703",
  "message": 日志入库发生异常! log:{"userId":0,"platform":"","requestType":"get","apiRoute":"/api/system/gettime","requestUrl":"http://localhost:5000/api/system/gettime","requestHeader":"{\"accept\":[\"text/plain\"],\"connection\":[\"keep-alive\"],\"host\":[\"localhost:5000\"],\"user-Agent\":[\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36\"],\"accept-Encoding\":[\"gzip, deflate, br, zstd\"],\"accept-Language\":[\"zh-CN,zh;q=0.9\"],\"content-Type\":[\"application/x-www-form-urlencoded\"],\"referer\":[\"http://localhost:5000/index.html\"],\"sec-ch-ua\":[\"\\\"Not/A)Brand\\\";v=\\\"8\\\", \\\"Chromium\\\";v=\\\"126\\\", \\\"Google Chrome\\\";v=\\\"126\\\"\"],\"sec-ch-ua-platform\":[\"\\\"Windows\\\"\"],\"sec-ch-ua-mobile\":[\"?0\"],\"request-Origion\":[\"Knife4j\"],\"sec-Fetch-Site\":[\"same-origin\"],\"sec-Fetch-Mode\":[\"cors\"],\"sec-Fetch-Dest\":[\"empty\"]}","requestQuery":"","requestBody":"文件，图片或模板类操作，数据过大，不做记录","traceId":"0HN4MGJTSJOAT:00000002","requestTime":"2024-06-27 16:44:29","response":"{\"code\":41,\"status\":false,\"message\":\"用户未登录或登录状态已过期\",\"data\":{}}","timeConsumption":13,"id":0,"createTime":"2024-06-27 16:44:29"} ,
  "exception": System.ArgumentException: Keyword not supported: 'port'.
   at Microsoft.Data.Common.DbConnectionOptions.ParseInternal(Dictionary`2 parsetable, String connectionString, Boolean buildChain, Dictionary`2 synonyms, Boolean firstKey)
   at Microsoft.Data.Common.DbConnectionOptions..ctor(String connectionString, Dictionary`2 synonyms)
   at Microsoft.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   at Microsoft.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   at Microsoft.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   at Microsoft.Data.SqlClient.SqlConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at EES.Infrastructure.Service.LogHandlerService.WriteLogAsync(LogEntityBase logEntity, CancellationToken cancellationToken) in E:\Sinno\Projects\InnerProject\SinnoDemo\EES.Infrastructure\Service\LogHandlerService.cs:line 105,
  "stacktrace": ExecutionContext.RunInternal => <<StartAsync>b__0>d.MoveNext => LogHandlerService.WriteLogAsync
}
{
  "time": "2024-06-27 16:49:40.705",
  "message": 日志入库发生异常! log:{"userId":0,"platform":"","requestType":"get","apiRoute":"//api/system/gettime","requestUrl":"http://localhost:5000//api/system/gettime","requestHeader":"{\"accept\":[\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\"],\"connection\":[\"keep-alive\"],\"host\":[\"localhost:5000\"],\"user-Agent\":[\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36\"],\"accept-Encoding\":[\"gzip, deflate, br, zstd\"],\"accept-Language\":[\"zh-CN,zh;q=0.9\"],\"cache-Control\":[\"max-age=0\"],\"upgrade-Insecure-Requests\":[\"1\"],\"sec-ch-ua\":[\"\\\"Not/A)Brand\\\";v=\\\"8\\\", \\\"Chromium\\\";v=\\\"126\\\", \\\"Google Chrome\\\";v=\\\"126\\\"\"],\"sec-ch-ua-mobile\":[\"?0\"],\"sec-ch-ua-platform\":[\"\\\"Windows\\\"\"],\"sec-Fetch-Site\":[\"cross-site\"],\"sec-Fetch-Mode\":[\"navigate\"],\"sec-Fetch-User\":[\"?1\"],\"sec-Fetch-Dest\":[\"document\"]}","requestQuery":"","requestBody":"","traceId":"0HN4MGJTSJOAV:00000001","requestTime":"2024-06-27 16:49:40","response":"","timeConsumption":1,"id":0,"createTime":"2024-06-27 16:49:40"} ,
  "exception": System.ArgumentException: Keyword not supported: 'port'.
   at Microsoft.Data.Common.DbConnectionOptions.ParseInternal(Dictionary`2 parsetable, String connectionString, Boolean buildChain, Dictionary`2 synonyms, Boolean firstKey)
   at Microsoft.Data.Common.DbConnectionOptions..ctor(String connectionString, Dictionary`2 synonyms)
   at Microsoft.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   at Microsoft.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   at Microsoft.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   at Microsoft.Data.SqlClient.SqlConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at EES.Infrastructure.Service.LogHandlerService.WriteLogAsync(LogEntityBase logEntity, CancellationToken cancellationToken) in E:\Sinno\Projects\InnerProject\SinnoDemo\EES.Infrastructure\Service\LogHandlerService.cs:line 105,
  "stacktrace": ExecutionContext.RunInternal => <<StartAsync>b__0>d.MoveNext => LogHandlerService.WriteLogAsync
}
{
  "time": "2024-06-27 16:50:21.049",
  "message": 日志入库发生异常! log:{"userId":0,"platform":"","requestType":"get","apiRoute":"//api/system/gettime","requestUrl":"http://localhost:5000//api/system/gettime","requestHeader":"{\"accept\":[\"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\"],\"connection\":[\"keep-alive\"],\"host\":[\"localhost:5000\"],\"user-Agent\":[\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36\"],\"accept-Encoding\":[\"gzip, deflate, br, zstd\"],\"accept-Language\":[\"zh-CN,zh;q=0.9\"],\"cache-Control\":[\"max-age=0\"],\"upgrade-Insecure-Requests\":[\"1\"],\"sec-ch-ua\":[\"\\\"Not/A)Brand\\\";v=\\\"8\\\", \\\"Chromium\\\";v=\\\"126\\\", \\\"Google Chrome\\\";v=\\\"126\\\"\"],\"sec-ch-ua-mobile\":[\"?0\"],\"sec-ch-ua-platform\":[\"\\\"Windows\\\"\"],\"sec-Fetch-Site\":[\"cross-site\"],\"sec-Fetch-Mode\":[\"navigate\"],\"sec-Fetch-User\":[\"?1\"],\"sec-Fetch-Dest\":[\"document\"]}","requestQuery":"","requestBody":"","traceId":"0HN4MGJTSJOAV:00000002","requestTime":"2024-06-27 16:50:21","response":"","timeConsumption":0,"id":0,"createTime":"2024-06-27 16:50:21"} ,
  "exception": System.ArgumentException: Keyword not supported: 'port'.
   at Microsoft.Data.Common.DbConnectionOptions.ParseInternal(Dictionary`2 parsetable, String connectionString, Boolean buildChain, Dictionary`2 synonyms, Boolean firstKey)
   at Microsoft.Data.Common.DbConnectionOptions..ctor(String connectionString, Dictionary`2 synonyms)
   at Microsoft.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   at Microsoft.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   at Microsoft.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   at Microsoft.Data.SqlClient.SqlConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at EES.Infrastructure.Service.LogHandlerService.WriteLogAsync(LogEntityBase logEntity, CancellationToken cancellationToken) in E:\Sinno\Projects\InnerProject\SinnoDemo\EES.Infrastructure\Service\LogHandlerService.cs:line 105,
  "stacktrace": ExecutionContext.RunInternal => <<StartAsync>b__0>d.MoveNext => LogHandlerService.WriteLogAsync
}
{
  "time": "2024-06-27 16:50:43.205",
  "message": 日志入库发生异常! log:{"userId":0,"platform":"","requestType":"get","apiRoute":"/api/system/gettime","requestUrl":"http://localhost:5000/api/system/gettime","requestHeader":"{\"accept\":[\"text/plain\"],\"connection\":[\"keep-alive\"],\"host\":[\"localhost:5000\"],\"user-Agent\":[\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36\"],\"accept-Encoding\":[\"gzip, deflate, br, zstd\"],\"accept-Language\":[\"zh-CN,zh;q=0.9\"],\"content-Type\":[\"application/x-www-form-urlencoded\"],\"referer\":[\"http://localhost:5000/index.html\"],\"sec-ch-ua\":[\"\\\"Not/A)Brand\\\";v=\\\"8\\\", \\\"Chromium\\\";v=\\\"126\\\", \\\"Google Chrome\\\";v=\\\"126\\\"\"],\"sec-ch-ua-platform\":[\"\\\"Windows\\\"\"],\"sec-ch-ua-mobile\":[\"?0\"],\"request-Origion\":[\"Knife4j\"],\"sec-Fetch-Site\":[\"same-origin\"],\"sec-Fetch-Mode\":[\"cors\"],\"sec-Fetch-Dest\":[\"empty\"]}","requestQuery":"","requestBody":"文件，图片或模板类操作，数据过大，不做记录","traceId":"0HN4MGJTSJOAV:00000003","requestTime":"2024-06-27 16:50:43","response":"{\"code\":41,\"status\":false,\"message\":\"用户未登录或登录状态已过期\",\"data\":{}}","timeConsumption":6,"id":0,"createTime":"2024-06-27 16:50:43"} ,
  "exception": System.ArgumentException: Keyword not supported: 'port'.
   at Microsoft.Data.Common.DbConnectionOptions.ParseInternal(Dictionary`2 parsetable, String connectionString, Boolean buildChain, Dictionary`2 synonyms, Boolean firstKey)
   at Microsoft.Data.Common.DbConnectionOptions..ctor(String connectionString, Dictionary`2 synonyms)
   at Microsoft.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   at Microsoft.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   at Microsoft.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   at Microsoft.Data.SqlClient.SqlConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at EES.Infrastructure.Service.LogHandlerService.WriteLogAsync(LogEntityBase logEntity, CancellationToken cancellationToken) in E:\Sinno\Projects\InnerProject\SinnoDemo\EES.Infrastructure\Service\LogHandlerService.cs:line 105,
  "stacktrace": ExecutionContext.RunInternal => <<StartAsync>b__0>d.MoveNext => LogHandlerService.WriteLogAsync
}
