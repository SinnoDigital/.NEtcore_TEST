// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using EES.Infrastructure.Entities;
using EES.Infrastructure.Enums;
using System;
using System.Collections.Generic;

namespace EES.Modules.Ums.Entities
{
    /// <summary>
    /// 系统菜单资源表
    /// </summary>
    public partial class Menu : EntityBase
    {
        /// <summary>
        /// 系统菜单
        /// </summary>
        /// <param name="name">菜单名字</param>
        /// <param name="parentId">上级菜单id</param>
        /// <param name="sortNumber">排序</param>
        /// <param name="route">路由</param>
        /// <param name="type">菜单类型</param>
        /// <param name="category"></param>
        /// <param name="description">说明</param>
        /// <param name="icon">图标</param>
        /// <param name="englishName">菜单英文名称</param>
        /// <param name="createUserId">创建者id</param>
        /// <param name="createUserName">创建者名称</param>
        public Menu(string name, long parentId, int sortNumber, string route, MenuType type, MenuCategory category, string description, string icon, string englishName,long createUserId, string createUserName) : base(createUserId, createUserName)
        {
            Name = string.IsNullOrEmpty(name) ? string.Empty : name;
            ParentId = parentId;
            SortNumber = sortNumber;
            Route = string.IsNullOrEmpty(route) ? string.Empty : route;
            Type = type;
            Category = category;
            Description = string.IsNullOrEmpty(description) ? string.Empty : description;
            Icon = string.IsNullOrEmpty(icon) ? string.Empty : icon;
            EnglishName = string.IsNullOrEmpty(englishName) ? string.Empty : englishName;
        }

        /// <summary>
        /// 
        /// </summary>
        protected Menu() { }

        /// <summary>
        /// 菜单名称
        /// </summary>
        public string Name { get; private set; }
        /// <summary>
        /// 上级菜单
        /// </summary>
        public long ParentId { get; private set; }
        /// <summary>
        /// 同级别下显示排序
        /// </summary>
        public int SortNumber { get; private set; }
        /// <summary>
        /// 菜单路由
        /// </summary>
        public string Route { get; private set; }

        /// <summary>
        /// 菜单分类(Pc菜单 or Pda 菜单 or Mfs 菜单)
        /// </summary>
        public MenuType Type { get; private set; }


        /// <summary>
        /// 菜单的类别(导航分类 or 具体的页面)
        /// </summary>
        public MenuCategory Category { get; private set; }

        /// <summary>
        /// 备注说明
        /// </summary>
        public string Description { get; private set; }


        /// <summary>
        /// 图标
        /// </summary>
        public string Icon { get; private set; }

        /// <summary>
        /// 菜单的英文名称
        /// </summary>
        public string EnglishName { get; private set; }

        /// <summary>
        /// 修改
        /// </summary>
        /// <param name="name"></param>
        /// <param name="parentId"></param>
        /// <param name="sortNumber"></param>
        /// <param name="route"></param>
        /// <param name="description"></param>
        /// <param name="icon"></param>
        /// <param name="englishName"></param>
        /// <param name="type"></param>
        /// <param name="category"></param>
        /// <param name="updateUserId"></param>
        /// <param name="updateUserName"></param>
        public void Modify(string name, long parentId, int sortNumber, string route, string description, string icon, string englishName, MenuType type, MenuCategory category, long updateUserId, string updateUserName)
        {
            Name = string.IsNullOrEmpty(name) ? string.Empty : name;
            ParentId = parentId;
            SortNumber = sortNumber;
            Route = string.IsNullOrEmpty(route) ? string.Empty : route;
            Description = string.IsNullOrEmpty(description) ? string.Empty : description;
            Icon=string.IsNullOrEmpty(icon) ? string.Empty : icon;
            EnglishName = string.IsNullOrEmpty(englishName) ? string.Empty : englishName;

            Type = type;
            Category = category;

            UpdateRecord(updateUserId, updateUserName);
        }

    }
}