// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using EES.Infrastructure.Entities;
using EES.Infrastructure.Enums;
using EES.Modules.Ums.Commands.User;
using EES.Modules.Ums.Enums;
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;

namespace EES.Modules.Ums.Entities
{
    /// <summary>
    /// 功能资源表
    /// </summary>
    public partial class Function : EntityBase
    {
        /// <summary>
        /// 
        /// </summary>
        /// <param name="name"></param>
        /// <param name="type"></param>
        /// <param name="parentId"></param>
        /// <param name="description"></param>
        /// <param name="identifier"></param>
        /// <param name="createUserId"></param>
        /// <param name="createUserName"></param>
        public Function(string name, FunctionType type, long parentId, string description, string identifier, long createUserId, string createUserName) : base(createUserId, createUserName)
        {
            Name = string.IsNullOrEmpty(name) ? string.Empty : name;
            Type = type;
            ParentId = parentId;
            Description = string.IsNullOrEmpty(description) ? string.Empty : description;
            Identifier = string.IsNullOrEmpty(identifier) ? string.Empty : identifier;
        }

        /// <summary>
        /// 
        /// </summary>
        protected Function() { }



        /// <summary>
        /// 名字
        /// </summary>
        public string Name { get; private set; }

        /// <summary>
        /// 标识 1: 分类标识   2：功能
        /// </summary>
        public FunctionType Type { get; private set; }

        /// <summary>
        /// 父级id
        /// </summary>
        public long ParentId { get; private set; }

        /// <summary>
        /// 功能说明
        /// </summary>
        public string Description { get; private set; }

        /// <summary>
        /// 功能权限标识符
        /// </summary>
        public string Identifier { get; private set; }


        /// <summary>
        /// 
        /// </summary>
        /// <param name="name"></param>
        /// <param name="type"></param>
        /// <param name="parentId"></param>
        /// <param name="description"></param>
        /// <param name="identifier"></param>
        /// <param name="updateUserId"></param>
        /// <param name="updateUserName"></param>
        public void Modify(string name, FunctionType type, long parentId, string description, string identifier, long updateUserId, string updateUserName)
        {
            Name = string.IsNullOrEmpty(name) ? string.Empty : name;
            Type = type;
            ParentId = parentId;
            Description = string.IsNullOrEmpty(description) ? string.Empty : description;
            Identifier = string.IsNullOrEmpty(identifier) ? string.Empty : identifier;

            UpdateRecord(updateUserId, updateUserName);
        }
    }
}